{
  "version": 3,
  "file": "avispa.js",
  "sourceRoot": "..",
  "sources": [
    "src/avispa.litcoffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "(c) 2013-2014 Matthew Oertle <moertle@gmail.com>\nhttp://github.com/moertle/avispa\n\nA wrapper function to create jQuery SVG elements\n\n    window.$SVG ?= (name) -> $( document.createElementNS('http://www.w3.org/2000/svg', name) )\n\nCancel an event\n\n    window.cancelEvent ?= (event) ->\n        event.preventDefault()\n        event.stopPropagation()\n        return false\nsuper\nStandardize the way scrolling the mousewheel is handled across browsers\n\n    jQuery.event.props.push('wheelDelta')\n    jQuery.event.props.push('detail')\n\n    window.normalizeWheel ?= (event) ->\n        return event.wheelDelta / 120 if event.wheelDelta\n        return event.detail     /  -3 if event.detail\n        return 0\n\nConstants\n\n    RAD = 180.0 / Math.PI\n\n\nThe template for the main surface.\n\n    avispa_main = '''\n        <defs>\n         <marker id=\"Arrow\"\n           viewBox=\"0 0 10 10\" refX=\"7\" refY=\"5\"\n           markerUnits=\"strokeWidth\"\n           markerWidth=\"4\" markerHeight=\"4\"\n           fill=\"#eee\" stroke=\"#999\" stroke-width=\"1px\" stroke-dasharray=\"10,0\"\n           orient=\"auto\">\n          <path d=\"M 1 1 L 9 5 L 1 9 z\" />\n         </marker>\n        </defs>\n        <g class=\"pan\">\n         <g class=\"zoom\">\n          <g class=\"links\"></g>\n          <g class=\"nodes\"></g>\n          <g class=\"labels\"></g>\n         </g>\n        </g>\n        '''\n\n    context = null\n\n\nExpose a global view class so that consumers of the API can instantiate a view.\n\n    class window.Avispa extends Backbone.View\n\n        @VERSION: '0.2'\n\n        events:\n            'mousedown.avispa'      : 'OnMouseDown'\n            'mousemove.avispa'      : 'OnMouseMove'\n            'mouseup.avispa'        : 'OnMouseUp'\n            'mousewheel.avispa'     : 'OnMouseWheel'\n            'DOMMouseScroll.avispa' : 'OnMouseWheel'\n            'contextmenu.avispa'    : 'OnContextMenu'\n\n        initialize: (options) ->\n            context = @\n\n            _.bindAll @, 'render',\n                'OnMouseDown', 'OnMouseMove', 'OnMouseUp', 'OnMouseWheel', 'OnContextMenu'\n\n            @scale    = 1.0\n            @links    = {}\n            @offset   = null\n            @dragItem = null\n            @arrow    = null\n\n            @position =\n                x: 0\n                y: 0\n\n            @zoom =\n                step : 0.125\n                min  : 0.125\n                max  : 2.5\n\n            @$parent  = @$el.parent()\n\n            @$pan     = @$el.find('g.pan')\n            @$zoom    = @$el.find('g.zoom')\n\n            @$groups  = @$el.find('g.groups')\n            @$links   = @$el.find('g.links')\n            @$objects = @$el.find('g.objects')\n            @$labels  = @$el.find('g.labels')\n\n            @$pan.x = parseInt(window.innerWidth  / 2)\n            @$pan.y = parseInt(window.innerHeight / 2)\n\n            @Pan(0,0)\n\n            return @\n\n        Pan: (dx, dy) ->\n            @$pan.x += dx\n            @$pan.y += dy\n\n            @$pan.attr('transform', \"translate(#{@$pan.x}, #{@$pan.y})\")\n            @$parent.css('background-position', \"#{@$pan.x}px #{@$pan.y}px\")\n            return @\n\n        Scale: (@scale) ->\n            @$zoom.attr('transform', \"scale(#{scale})\")\n            return @\n\n        Zoom: (delta) ->\n            if delta is 0 then scale = 1.0\n            else scale = @scale + delta * @zoom.step\n\n            return @ if scale <= @zoom.min or scale >= @zoom.max\n\n            @Scale(scale)\n            return @\n\n        Point: (event) ->\n            # translates the client x,y into the surface x,y\n            point = @el.createSVGPoint()\n            point.x = event.clientX\n            point.y = event.clientY\n            point = point.matrixTransform(@el.getScreenCTM().inverse())\n\n            # account for the current pan and scale\n            point.x = parseInt((point.x - @$pan.x) / @scale)\n            point.y = parseInt((point.y - @$pan.y) / @scale)\n\n            return [point.x, point.y]\n\n        OnMouseDown: (event) ->\n            if @arrow?\n                @arrow.Remove()\n                @arrow = null\n                return cancelEvent(event)\n\n            switch event.which\n                when 1 then @LeftDown(event)\n                when 2 then @MiddleDown(event)\n                when 3 then @RightDown(event) if @RightDown\n\n            return cancelEvent(event)\n\n        LeftDown: (event) ->\n            #if event.shiftKey\n            @offset = [event.clientX, event.clientY]\n            return\n\n        MiddleDown: (event) ->\n            @Pan(-@$pan.x + window.innerWidth / 2, -@$pan.y + window.innerHeight / 2)\n            @Zoom(0)\n            #@$('#zoomslider').slider('option', 'value', 1)\n            return\n\n        OnMouseMove: (event) ->\n            # drag the entire scene around\n            if @offset\n                @Pan(event.clientX - @offset[0], event.clientY - @offset[1])\n                @offset = [event.clientX, event.clientY]\n\n            else if @arrow\n                @arrow.Drag(event)\n\n            else if @dragItem\n                @dragItem.jitter++\n                @dragItem.Drag(event) if @dragItem.Drag\n\n            return cancelEvent(event)\n\n        OnMouseUp: (event) ->\n            @offset = null\n\n            if @dragItem?\n                if @dragItem.jitter < 3\n                    switch event.which\n                        when 1 then @dragItem.LeftClick(event)   if @dragItem.LeftClick\n                        when 2 then @dragItem.MiddleClick(event) if @dragItem.MiddleClick\n                        when 3 then @dragItem.RightClick(event)  if @dragItem.RightClick\n\n                @dragItem.MouseUp(event) if @dragItem?.MouseUp\n                @dragItem = null\n\n            else\n                switch event.which\n                    when 1 then @LeftClick(event)   if @LeftClick\n                    when 2 then @MiddleClick(event) if @MiddleClick\n                    when 3 then @RightClick(event)  if @RightClick\n\n            return cancelEvent(event)\n\n        OnMouseWheel: (event) ->\n            @Zoom(normalizeWheel(event))\n            #@$('#zoomslider').slider('option', 'value', @scale)\n            return cancelEvent(event)\n\n        OnContextMenu: (event) ->\n\n\nThe Avispa.BaseObject represents an abstract base class for Group and Node\nelements.  The root is an SVG G element that is translated when dragged.\n\n    Avispa.BaseObject = Backbone.View.extend\n\n        events:\n            'mousedown'   : 'OnMouseDown'\n            'mouseenter'  : 'OnMouseEnter'\n            'mouseleave'  : 'OnMouseLeave'\n            'mouseup'     : 'OnMouseUp'\n            'contextmenu' : 'OnContextMenu'\n\nThe \"Position\" model is defined by the project that is importing Avispa.\n\n        initialize: (@options) ->\n            _.bindAll @, 'OnMouseDown', 'OnMouseUp', 'OnContextMenu'\n\nExpect a position to be passed in\n\n            @position = @options.position\n            @parent   = @options.parent\n\nIf we have a parent, keep track of our offset from the parent\n\n            if @parent\n                @offset =\n                    x: @position.get('x')\n                    y: @position.get('y')\n                @ParentDrag(@parent.position)\n                @parent.position.bind 'change', @ParentDrag, @\n\n            @position.bind 'change', @render, @\n\n            return @\n\n        Size: (w,h) ->\n            @position.set(w: w, h: h)\n            return @\n\n        ParentDrag: (ppos) ->\n            @position.set\n                x: @offset.x + ppos.get('x')\n                y: @offset.y + ppos.get('y')\n            return\n\n        OnMouseDown: (event) ->\n            @jitter = 0\n\n            @x1 = (event.clientX / context.scale) - @position.get('x')\n            @y1 = (event.clientY / context.scale) - @position.get('y')\n\n            if @parent\n                @ox1 = @offset.x - @position.get('x')\n                @oy1 = @offset.y - @position.get('y')\n\n            # TODO: calculate the bounds of the parent element\n\n            if event.shiftKey\n                @$el.parent().append(@$el)\n\n            context.dragItem = @\n\n            return cancelEvent(event)\n\n        Drag: (event) ->\n            x = (event.clientX / context.scale) - @x1\n            y = (event.clientY / context.scale) - @y1\n\n            @position.set 'x': x, 'y': y\n\n            return cancelEvent(event)\n\n        OnMouseUp: (event) ->\n\n        OnContextMenu: (event) ->\n\n\n\nBase class for \"group\" objects\n\n    class Avispa.Group extends Avispa.BaseObject\n        el: () -> $SVG('g').attr('class', 'group')\n\n        initialize: () ->\n            super()\n\n            @$rect = $SVG('rect')\n                .attr('width',  @position.get('w'))\n                .attr('height', @position.get('h'))\n                .css('fill', @position.get('fill'))\n                .appendTo(@$el)\n\n            return\n\n        render: () ->\n            @$rect\n                .attr('x', @position.get('x'))\n                .attr('y', @position.get('y'))\n                .attr('width',  @position.get('w'))\n                .attr('height', @position.get('h'))\n            return @\n\n        OnMouseEnter: (event) ->\n            if not context.dragItem?\n                @$rect.attr('class', 'hover')\n            return cancelEvent(event)\n\n        OnMouseLeave: (event) ->\n            if not context.dragItem?\n                @$rect.removeAttr('class')\n            return cancelEvent(event)\n\n\n        Drag: (event) ->\n            x = (event.clientX / context.scale) - @x1\n            y = (event.clientY / context.scale) - @y1\n\n            if @offset\n                @offset.x = @ox1 + x\n                @offset.y = @oy1 + y\n\n                newparentw = 0\n                newparenth = 0\n                boundsx = @parent.position.get('w') - @position.get('w') - 10\n                boundsy = @parent.position.get('h') - @position.get('h') - 10\n\n                if @offset.x < 10\n                    @offset.x = 10\n                    x = @parent.position.get('x') + 10\n                else if @offset.x > boundsx\n                    #@offset.x = boundsx\n                    #x = @parent.position.get('x') + boundsx\n                    newparentw = @offset.x - boundsx\n                    x = @offset.x #@parent.position.get('x') + boundsx\n                if @offset.y < 30\n                    @offset.y = 30\n                    y = @parent.position.get('y') + 30\n                else if @offset.y > boundsy\n                    #@offset.y = boundsy\n                    #y = @parent.position.get('y') + boundsy\n                    newparenth = @offset.y - boundsy\n                    y = @offset.y #@parent.position.get('x') + boundsx\n\n            @position.set 'x': x, 'y': y\n            if newparentw or newparenth\n                newparentw = @parent.position.get('w') + newparentw\n                newparenth = @parent.position.get('h') + newparenth\n                @parent.Size newparentw, newparenth\n\n            return cancelEvent(event)\n\n\nBase class for \"node\" objects\n\n    class Avispa.Node extends Avispa.BaseObject\n        el: () -> $SVG('g').attr('class', 'node')\n\n        initialize: () ->\n            super()\n\n            @$circle = $SVG('circle')\n                .attr('r', @position.get('radius'))\n                .css('fill', @position.get('fill'))\n                .appendTo(@$el)\n\n            @$label = $SVG('text')\n                .attr('dy', '0.5em')\n                .text(@options.label)\n                .appendTo(@$el)\n\n            @render()\n\n            return\n\n        render: () ->\n            @$circle\n                .attr('cx', @position.get('x'))\n                .attr('cy', @position.get('y'))\n\n            @$label\n                .attr('x', @position.get('x'))\n                .attr('y', @position.get('y'))\n\n            return @\n\n        OnMouseEnter: (event) ->\n            if not context.dragItem?\n                @$circle.attr('class', 'hover')\n            return cancelEvent(event)\n\n        OnMouseLeave: (event) ->\n            if not context.dragItem?\n                @$circle.removeAttr('class')\n            return cancelEvent(event)\n\n\n        Drag: (event) ->\n            x = (event.clientX / context.scale) - @x1\n            y = (event.clientY / context.scale) - @y1\n\n            if @offset\n                @offset.x = @ox1 + x\n                @offset.y = @oy1 + y\n\n                if @offset.x < 0\n                    @offset.x = 0\n                    x = @parent.position.get('x')\n                else if @offset.x > @parent.position.get('w')\n                    @offset.x = @parent.position.get('w')\n                    x = @parent.position.get('x') + @parent.position.get('w')\n                if @offset.y < 0\n                    @offset.y = 0\n                    y = @parent.position.get('y')\n                else if @offset.y > @parent.position.get('h')\n                    @offset.y = @parent.position.get('h')\n                    y = @parent.position.get('y') + @parent.position.get('h')\n\n            @position.set 'x': x, 'y': y\n\n            return cancelEvent(event)\n\n\n\nBase class for \"link\" objects\n\n    class Avispa.Link extends Backbone.View\n        el: () -> $SVG('g').attr('class', 'link')\n\n        events:\n            'mousedown'   : 'OnMouseDown'\n            'mouseenter'  : 'OnMouseEnter'\n            'mouseleave'  : 'OnMouseLeave'\n            'contextmenu' : 'OnContextMenu'\n\n        initialize: (@options) ->\n            @path = $SVG('path')\n                .css('marker-end', 'url(#Arrow)')\n                .css('opacity', '0.5')\n                .appendTo(@$el)\n\n            _.bindAll @,\n                'render',\n                'OnMouseDown', 'OnMouseEnter', 'OnMouseLeave', 'OnContextMenu'\n\n            @left  = @options.left\n            @right = @options.right\n\n            @arc = new Backbone.Model\n                arc: 10\n\n            @arc.bind 'change', @render, @\n\nBind to the position of the left and right sides of the connection\n\n            @left.position.bind  'change', @render, @\n            @right.position.bind 'change', @render, @\n\n            @render()\n\n            if @options.parent?\n                @options.parent.$links.append(@$el)\n\n            return @\n\n        update: () ->\n            #@label.text(name)\n            return\n\n        render: () ->\n            return @ if not @arc\n\n            arc = @arc.get('arc')\n            lx = @left.position.get('x')\n            ly = @left.position.get('y')\n            rx = @right.position.get('x')\n            ry = @right.position.get('y')\n\n            # calculate the angle between 2 nodes\n            ang = Math.atan2(rx - lx, ry - ly)\n\n            # bound the offset to about half the circle\n            offset = Math.max(-1.5, Math.min(1.5, arc / 100))\n\n            # draw to the edge of the node\n            lx +=  30 * Math.sin(ang + offset)\n            ly +=  30 * Math.cos(ang + offset)\n            rx += -33 * Math.sin(ang - offset)\n            ry += -33 * Math.cos(ang - offset)\n\n            # calculate the the position for the quadratic bezier curve\n            xc = ((lx + rx) >> 1) + arc * Math.cos(ang)\n            yc = ((ly + ry) >> 1) - arc * Math.sin(ang)\n\n            mx = xc - (arc>>1) * Math.cos(ang)\n            my = yc + (arc>>1) * Math.sin(ang)\n\n            rot = -(RAD * ang)\n            if rot > 0 and rot < 180\n            then rot -= 90\n            else rot += 90\n\n            @path.attr('d', \"M #{lx} #{ly} Q #{xc} #{yc} #{rx} #{ry}\")\n            #@label.attr('x', mx).attr('y', my).attr('transform', \"rotate(#{rot}, #{mx} #{my})\")\n\n            return @\n\nEvents\n\n        Drag: (event) ->\n            [x,y] = context.Point(event)\n\n            from_x = @left.position.get('x')\n            from_y = @left.position.get('y')\n            to_x   = @right.position.get('x')\n            to_y   = @right.position.get('y')\n\n            d = (to_x - from_x) * (y - from_y) - (to_y - from_y) * (x - from_x)\n\n            if d\n                d = Math.pow(Math.abs(d), 0.5) * if d > 0 then -1 else 1\n\n            if not @od and @od isnt 0\n                @od = d\n\n            # will trigger a call to render\n            @arc.set('arc', Math.max(0, @oarc + d - @od))\n\n            return\n\n        OnMouseDown: (event) ->\n            @jitter = 0\n\n            context.dragItem = @\n            @oarc = @arc.get('arc')\n            @od = null\n\n            return cancelEvent(event)\n\n        MouseUp: (event) ->\n            if @jitter > 3\n                @path.css('stroke-width', '3px')\n\n            return\n\n        OnMouseEnter: () ->\n            if not context.dragItem?\n                @path.css('stroke-width', '6px')\n            return\n\n        OnMouseLeave: () ->\n            if not context.dragItem?\n                @path.css('stroke-width', '3px')\n            return\n\n        LeftClick: (event) ->\n            @arc.set('arc', 0) if event.shiftKey\n            return\n\n        OnContextMenu: (event) ->\n"
  ]
}