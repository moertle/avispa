// Generated by CoffeeScript 1.10.0
(function() {
  var Graph, Group,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  $(document).ready(function() {
    var graph, group, link, n1, n2, n3;
    graph = new Graph({
      el: $('#surface svg')
    });
    group = new Group({
      model: new Backbone.Model({
        title: 'Group 1'
      }),
      parent: null,
      position: new Backbone.Model({
        x: -30,
        y: -50,
        w: 150,
        h: 150
      })
    });
    graph.$groups.append(group.$el);
    n1 = new Avispa.Node({
      label: 'Node 1',
      parent: group,
      position: new Backbone.Model({
        x: 35,
        y: 55,
        radius: 30,
        fill: '#cfc'
      })
    });
    graph.$objects.append(n1.$el);
    n2 = new Avispa.Node({
      label: 'Node 2',
      parent: group,
      position: new Backbone.Model({
        x: 105,
        y: 85,
        radius: 30,
        fill: '#cfc'
      })
    });
    graph.$objects.append(n2.$el);
    group = new Group({
      model: new Backbone.Model({
        title: 'Group 2'
      }),
      parent: null,
      position: new Backbone.Model({
        x: 150,
        y: 60,
        w: 100,
        h: 100,
        fill: '#fcc'
      })
    });
    graph.$groups.append(group.$el);
    n3 = new Avispa.Node({
      label: 'Node 3',
      parent: group,
      position: new Backbone.Model({
        x: 25,
        y: 45,
        radius: 30
      })
    });
    graph.$objects.append(n3.$el);
    link = new Avispa.Link({
      parent: graph,
      left: n1,
      right: n3
    });
    return link = new Avispa.Link({
      parent: graph,
      left: n3,
      right: n2
    });
  });

  Graph = (function(superClass) {
    extend(Graph, superClass);

    function Graph() {
      return Graph.__super__.constructor.apply(this, arguments);
    }

    Graph.prototype.initialize = function() {
      return Graph.__super__.initialize.apply(this, arguments);
    };

    return Graph;

  })(Avispa);

  Group = (function(superClass) {
    extend(Group, superClass);

    function Group() {
      return Group.__super__.constructor.apply(this, arguments);
    }

    Group.prototype.initialize = function() {
      Group.__super__.initialize.apply(this, arguments);
      this.$label = $SVG('text').attr('dx', '0.5em').attr('dy', '1.5em').text(this.model.get('title')).appendTo(this.$el);
      this.render();
      return this;
    };

    Group.prototype.render = function() {
      Group.__super__.render.apply(this, arguments);
      this.$label.attr('x', this.position.get('x')).attr('y', this.position.get('y'));
      return this;
    };

    Group.prototype.OnMouseDown = function(event) {
      return Group.__super__.OnMouseDown.apply(this, arguments);
    };

    Group.prototype.OnContextMenu = function(event) {
      if (event.shiftKey) {
        return;
      }
      return cancelEvent(event);
    };

    return Group;

  })(Avispa.Group);

}).call(this);

//# sourceMappingURL=example.js.map
